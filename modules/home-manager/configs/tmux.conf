# Fix for https://github.com/nix-community/home-manager/issues/5952
set -gu default-command
set -g default-shell "$SHELL"

set -g detach-on-destroy off # don't exit from tmux when closing a session
set-option -sa terminal-features ',xterm-256color:RGB'
set-option -g status-position top
set -g set-clipboard on      # use system clipboard
set -g history-limit 1000000 # increase history size (from 2,000)

set-window-option -g pane-base-index 1
set-option -g renumber-windows on

set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""

# Open panes in the same directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind-key -n C-f run-shell "sesh connect \"$(
    sesh list -H | fzf-tmux --ansi -p 55%,60% \
        --no-sort --border-label ' sesh ' --prompt 'âš¡  ' \
        --header '  ^a all ^t tmux ^x zoxide ^d tmux kill ^f find' \
        --bind 'tab:down,btab:up' \
        --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(ðŸªŸ  )+reload(sesh list)'
)\""

# Window navigation using Ctrl + number
# bind -n S-Left  previous-window
# bind -n S-Right next-window

bind -N "âŒ˜+l last-session (via sesh) " L run-shell "sesh last || tmux display-message -d 1000 'Oops, no last sessions found'"
bind -N "âŒ˜+g lazygit " g new-window -c "#{pane_current_path}" -n "ó°˜¬" "lazygit"
bind -N "âŒ˜+G gh-dash " G new-window -c "#{pane_current_path}" -n "î®¡ " "gh dash 2> /dev/null"

# Jira CLI hotkeys ('project IS NOT EMPTY' query removes the default limitation of looking inside a single project)
bind -N "âŒ˜+j my jira issues " j new-window -c "#{pane_current_path}" -n "ó°Œƒ" "jira issues list -a $(jira me) -s~Done -q 'project IS NOT EMPTY'"
bind -N "âŒ˜+J jira hotfixes " J new-window -c "#{pane_current_path}" -n "ó°Œƒ" "jira issues list -a $(jira me) -s~Done -q 'project IS NOT EMPTY AND type = HotFix'"

bind -N "âŒ˜+R reload config " r source ~/.config/tmux/tmux.conf \; display-message "Reloaded tmux config"

# Disable wrapping of pane navigations
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   { new-window "aerospace focus left" } { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' { new-window "aerospace focus down" } { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    { new-window "aerospace focus up" } { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  { new-window "aerospace focus right" } { select-pane -R } }

bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }
